# Kamron Cole (kjc8084@rit.edu)
# Modified Ansible script to set up network with PFsense by Alex Nasca
# - name: Localhost setup
#   hosts: localhost
#   roles: # automatically looks for dir in ./roles/ and tasks in yml in /roles/role_name/tasks/main.yml
#     - localhost_setup


# - name: Deploy Networks
#   hosts: localhost
#   vars:
#     networks:
#       red:
#         subnet:
#           address: 88.31.10.0/24
#           gateway_ip: "88.31.10.1"
#         host_routes:
#           - destination: 10.0.0.0/24
#             nexthop: 88.31.10.1
#           - destination: 10.0.1.0/24
#             nexthop: 88.31.10.1
#           - destination: 192.168.1.0/24
#             nexthop: 88.31.10.1
#           - destination: 172.128.1.0/24
#             nexthop: 88.31.10.1
#           - destination: 10.0.2.0/24
#             nexthop: 88.31.10.254
#           - destination: 192.168.2.0/24
#             nexthop: 88.31.10.254
#           - destination: 172.128.2.0/24
#             nexthop: 88.31.10.254
#         port_security_enabled: false
#       internet:
#         subnet:
#           address: 44.44.44.0/24
#           gateway_ip: "44.44.44.44"
#         port_security_enabled: false
#       rustdesk:
#         subnet:
#           address: 66.66.66.0/24
#           gateway_ip: "66.66.66.66"
#           - destination: 129.21.33.138/32
#             nexthop: 66.66.66.66
#           - destination: 129.21.3.17/32
#             nexthop: 66.66.66.66
#         port_security_enabled: false
#       local_1:
#         subnet: 
#           address: 192.168.1.0/24
#           gateway_ip: "192.168.1.1"
#         port_security_enabled: false
#       remote_1:
#         subnet: 
#           address: 10.0.1.0/24
#           gateway_ip: "10.0.1.254"
#         port_security_enabled: false
#       sat_1:
#         subnet: 
#           address: 172.128.1.0/24
#           gateway_ip: "172.128.1.1"
#         port_security_enabled: false 
#       local_2:
#         subnet: 
#           address: 192.168.2.0/24
#           gateway_ip: "192.168.2.1"
#         port_security_enabled: false
#       remote_2:
#         subnet: 
#           address: 10.0.2.0/24
#           gateway_ip: "10.0.2.254"
#         port_security_enabled: false
#       sat_2:
#         subnet: 
#           address: 172.128.2.0/24
#           gateway_ip: "172.128.2.1"
#         port_security_enabled: false 
#   vars_files:
#     - ./vars/deploy_vars.yml

#   tasks:
#     - name: Deploy Networks
#       include_role: # allows looping with roles
#         name: deploy_network_instance
#       loop: "{{ networks | dict2items }}"
#       loop_control:
#         loop_var: network


# - name: Deploy pfSense Routers
#   hosts: localhost
#   vars:
#     pf_routers:
#       Saturn: # blue team 1 main router
#         image: PFsense-2.6.0-Cloudinit
#         image_size: 40
#         flavor: medium
#         control: 10.0.0.230 # WAN by default
#         connections:
#           red: # Lan by default
#             address: 88.31.10.1
#           remote_1: # Rest must manually be set to up
#             address: 10.0.1.254
#           local_1:
#             address: 192.168.1.1
#           rustdesk:
#             address: 44.44.44.254
#       Apollo: # blue team 1 outer router (to satellite)
#         image: PFsense-2.6.0-Cloudinit
#         image_size: 40
#         flavor: medium
#         control: 10.0.0.231
#         connections:
#           sat_1:
#             address: 172.128.1.1
#           remote_1:
#             address: 10.0.1.253
#       Uranus:
#         image: PFsense-2.6.0-Cloudinit
#         image_size: 40
#         flavor: medium
#         control: 10.0.0.232
#         connections:
#           red:
#             address: 88.31.10.254
#           remote_2:
#             address: 10.0.2.254
#           local_2:
#             address: 192.168.2.1
#           rustdesk:
#             address: 44.44.44.253
#       Artemis:
#         image: PFsense-2.6.0-Cloudinit
#         image_size: 40
#         flavor: medium
#         control: 10.0.0.233
#         connections:
#           sat_2:
#             address: 172.128.2.1
#           remote_2:
#             address: 10.0.2.253
  
#     op_routers:
#       rustdesk:
#         internet: true
#         interfaces:
#           - net: rustdesk_net
#             subnet: rustdesk_subnet

#   vars_files:
#     - ./vars/deploy_vars.yml

#   tasks:
#     - name: Deploy pfSense Routers
#       include_role:
#         name: deploy_pfsense_instance
#       loop: "{{ pf_routers | dict2items }}"
#       loop_control:
#         loop_var: router

#     - name: Connect Internet
#       include_role:
#         name: deploy_openstack_router
#       loop: "{{ op_routers | dict2items }}"
#       loop_control:
#         loop_var: router

#     - name: Rest
#       pause: 
#         seconds: 60

- name: Configure pfSense Instances
  hosts: pfsense
  gather_facts: true
  vars:
    router_interfaces:
      Saturn:
        address: "10.0.0.230"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.230
            cidr: 24
            enable: true
          wan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 88.31.10.1
            ipv4_gateway: wan_next_gw
            cidr: 24
            enable: true
          remote:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.1.254
            cidr: 24
            enable: true
          lan:
            iface: vtnet3
            ipv4_type: static
            ipv4: 192.168.1.1
            cidr: 24
            enable: true
          internet:
            iface: vtnet4
            ipv4_type: static
            ipv4: 44.44.44.254
            ipv4_gateway: internet_gw
            cidr: 24
            enable: true
        gateways:
          internet_gw:
            iface: internet
            gateway: 44.44.44.44
            is_default: true
          wan_gw:
            iface: wan
            gateway: 88.31.10.1
          wan_next_gw:
            iface: wan
            gateway: 88.31.10.254
          sat_gw:
            iface: remote
            gateway: 10.0.1.253
          remote_gw:
            iface: remote
            gateway: 10.0.1.254
        routes:
          sat_route:
            network: 172.128.1.0/24
            gateway: sat_gw
            iface: remote
      Apollo:
        address: "10.0.0.231"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.231
            cidr: 24
            enable: true
          lan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 172.128.1.1
            cidr: 24
            enable: true
          wan:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.1.253
            ipv4_gateway: remote_next_gw
            cidr: 24
            enable: true
        gateways:
          remote_next_gw:
            iface: wan
            gateway: 10.0.1.254
            is_default: true
          remote_gw:
            iface: wan
            gateway: 10.0.1.253
        routes:
          local_route:
            network: 192.168.1.0/24
            gateway: remote_next_gw
          wan_route:
            network: 88.31.10.0/24
            gateway: remote_next_gw
      Uranus:
        address: "10.0.0.232"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.232
            cidr: 24
            enable: true
          wan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 88.31.10.254
            ipv4_gateway: wan_next_gw
            cidr: 24
            enable: true
          remote:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.2.254
            cidr: 24
            enable: true
          lan:
            iface: vtnet3
            ipv4_type: static
            ipv4: 192.168.2.1
            cidr: 24
            enable: true
          internet:
            iface: vtnet4
            ipv4_type: static
            ipv4: 44.44.44.253
            ipv4_gateway: internet_gw
            cidr: 24
            enable: true
        gateways:
          internet_gw:
            iface: internet
            gateway: 44.44.44.44
            is_default: true
          wan_gw:
            iface: wan
            gateway: 88.31.10.254
          wan_next_gw:
            iface: wan
            gateway: 88.31.10.1
          sat_gw:
            iface: remote
            gateway: 10.0.2.253
          remote_gw:
            iface: remote
            gateway: 10.0.2.254
        routes:
          sat_route:
            network: 172.128.2.0/24
            gateway: sat_gw
            iface: remote
      Artemis:
        address: "10.0.0.233"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.233
            cidr: 24
            enable: true
          lan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 172.128.2.1
            cidr: 24
            enable: true
          wan:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.2.253
            ipv4_gateway: remote_next_gw
            cidr: 24
            enable: true
        gateways:
          remote_next_gw:
            iface: wan
            gateway: 10.0.2.254
            is_default: true
          remote_gw:
            iface: wan
            gateway: 10.0.2.253
        routes:
          local_route:
            network: 192.168.2.0/24
            gateway: remote_next_gw
          wan_route:
            network: 88.31.10.0/24
            gateway: remote_next_gw

    params: "{{ lookup('pfsensible.core.pfsense', './vars/pfsense_config.yml', 'all_definitions') }}"

  tasks:
    - name: Get Networks Info
      command:
        cmd: "openstack network list -f json -c ID -c Name"
      register: networks_info

    - name: Convert JSON array to dictionary
      set_fact:
        networks: "{{ networks | default({}) | combine({item.Name: {'id': item.ID}}) }}"
      loop: "{{ networks_info.stdout | from_json }}"

    - name: Configure Interfaces
      when: ansible_ssh_host == router.value.address and router.value.interfaces is defined
      include_role:
        name: config_pfsense_interface
      loop: "{{ router_interfaces | dict2items }}"
      loop_control:
        loop_var: router
        label: "{{ router.key }}"
  
    - name: Rest
      pause:
        seconds: 60
  
    - name: Configure Gateways
      when: ansible_ssh_host == router.value.address and router.value.gateways is defined
      include_role:
        name: config_pfsense_gateway
      loop: "{{ router_interfaces | dict2items }}"
      loop_control:
        loop_var: router
        label: "{{ router.key }}"
  
    - name: Configure Static Routes
      when: ansible_ssh_host == router.value.address and router.value.gateways is defined and router.value.routes is defined
      include_role:
        name: config_pfsense_route
      loop: "{{ router_interfaces | dict2items }}"
      loop_control:
        loop_var: router
        label: "{{ router.key }}"

    - name: Configure Firewall Rules
      include_role:
        name: config_pfsense_firewalls

    - name: set router_interfaces
      set_fact:
        router_interfaces: "{{ router_interfaces }}"


- name: Cleanup pfsense
  hosts: pfsense
  vars:
    router_interfaces: "{{ hostvars['localhost']['router_interfaces'] }}"
  
  tasks:
    - name: "Disable control interface for outer"
      include_role:
        name: cleanup_pfsense
      loop: "{{ router_interfaces | dict2items }}"
      loop_control:
        loop_var: router