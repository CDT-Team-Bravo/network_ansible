---
- name: Deploy Network with Control
  hosts: localhost
  vars:
    default_key_name: "grey_remote" # Fill in
    ansible_control_key_name: "grey_control" # Fill in

    sshjump_net:
      name: SSHJumpNet
      id: "f81a7f95-b0b3-4e97-870b-3f21c531e54f"
      subnet:
        name: teleport
        id: "7db5232a-76d9-4622-876b-02dd959e7d2f"

    networks:
      # grey_Gibraltar:
      #   subnet:
      #     address: 10.0.0.0/24
      #     gateway_ip: "10.0.0.230"
      #   port_security_enabled: false
      #   host_routes:
      #     - destination: 88.31.10.0/24
      #       nexthop: 10.0.0.230
      #     - destination: 10.0.1.0/24
      #       nexthop: 10.0.0.230
      #     - destination: 192.168.1.0/24
      #       nexthop: 10.0.0.230
      #     - destination: 172.128.1.0/24
      #       nexthop: 10.0.0.230
      #     - destination: 10.0.2.0/24
      #       nexthop: 10.0.0.232
      #     - destination: 192.168.2.0/24
      #       nexthop: 10.0.0.232
      #     - destination: 172.128.2.0/24
      #       nexthop: 10.0.0.232
      #   instances:
      #     grey_control-Orion:
      #       image: UbuntuJammy2204-Desktop
      #       image_size: 40
      #       flavor: xlarge
      #       networks:
      #         grey_Gibraltar:
      #           fixed_ipv4: 10.0.0.100
      #       sshjumpable: true
      #       rustdeskable: true
      #       key_name: "{{ default_key_name }}"
      #     grey_scoring-Watchtower:
      #       image: UbuntuJammy2204-Desktop
      #       image_size: 40
      #       flavor: xlarge
      #       networks: 
      #         grey_Gibraltar:
      #           fixed_ipv4: 10.0.0.101
      #       sshjumpable: true
      #       rustdeskable: true
      #       key_name: "{{ default_key_name }}"
      red:
        subnet:
          address: 88.31.10.0/24
          gateway_ip: "88.31.10.1"
        host_routes:
          - destination: 10.0.0.0/24
            nexthop: 88.31.10.1
          - destination: 10.0.1.0/24
            nexthop: 88.31.10.1
          - destination: 192.168.1.0/24
            nexthop: 88.31.10.1
          - destination: 172.128.1.0/24
            nexthop: 88.31.10.1
          - destination: 10.0.2.0/24
            nexthop: 88.31.10.254
          - destination: 192.168.2.0/24
            nexthop: 88.31.10.254
          - destination: 172.128.2.0/24
            nexthop: 88.31.10.254
        port_security_enabled: false
      internet:
        subnet:
          address: 44.44.44.0/24
          gateway_ip: "44.44.44.44"
        port_security_enabled: false
      rustdesk:
        subnet:
          address: 66.66.66.0/24
          gateway_ip: "66.66.66.66"
          host_routes:
          - destination: 129.21.33.138/32
            nexthop: 66.66.66.66
        port_security_enabled: true
      local_1:
        subnet: 
          address: 192.168.1.0/24
          gateway_ip: "192.168.1.1"
        port_security_enabled: false
      remote_1:
        subnet: 
          address: 10.0.1.0/24
          gateway_ip: "10.0.1.254"
        port_security_enabled: false
      sat_1:
        subnet: 
          address: 172.128.1.0/24
          gateway_ip: "172.128.1.1"
        port_security_enabled: false
      local_2:
        subnet: 
          address: 192.168.2.0/24
          gateway_ip: "192.168.2.1"
        port_security_enabled: false
      remote_2:
        subnet: 
          address: 10.0.2.0/24
          gateway_ip: "10.0.2.254"
        port_security_enabled: false
      sat_2:
        subnet: 
          address: 172.128.2.0/24
          gateway_ip: "172.128.2.1"
        port_security_enabled: false

    op_routers:
      main: # router that provides internet
        internet: true
        interfaces:
          - net: internet_net
            subnet: internet_subnet
      rustdesk: # router specifically for rustdesk connections
        internet: true
        interfaces:
          - net: rustdesk_net
            subnet: rustdesk_subnet

    pf_routers:
      Saturn: # blue team 1 main router
        image: PFsense-2.6.0-Cloudinit
        image_size: 40
        flavor: large
        control: 10.0.0.230 # WAN by default
        connections:
          red: # Lan by default
            address: 88.31.10.1
          remote_1: # Rest must manually be set to up
            address: 10.0.1.254
          local_1:
            address: 192.168.1.1
          internet:
            address: 44.44.44.254
      Apollo: # blue team 1 outer router (to satellite)
        image: PFsense-2.6.0-Cloudinit
        image_size: 40
        flavor: large
        control: 10.0.0.231
        connections:
          sat_1:
            address: 172.128.1.1
          remote_1:
            address: 10.0.1.253
      Uranus: # blue team 2 main router
        image: PFsense-2.6.0-Cloudinit
        image_size: 40
        flavor: large
        control: 10.0.0.232
        connections:
          red:
            address: 88.31.10.254
          remote_2:
            address: 10.0.2.254
          local_2:
            address: 192.168.2.1
          internet:
            address: 44.44.44.253
      Artemis: # blue team 2 outer router (to satellite)
        image: PFsense-2.6.0-Cloudinit
        image_size: 40
        flavor: large
        control: 10.0.0.233
        connections:
          sat_2:
            address: 172.128.2.1
          remote_2:
            address: 10.0.2.253
  
    pf_interfaces:
      Saturn:
        address: "10.0.0.230"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.230
            cidr: 24
            enable: true
          wan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 88.31.10.1
            ipv4_gateway: wan_next_gw
            cidr: 24
            enable: true
          remote:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.1.254
            cidr: 24
            enable: true
          lan:
            iface: vtnet3
            ipv4_type: static
            ipv4: 192.168.1.1
            cidr: 24
            enable: true
          internet:
            iface: vtnet4
            ipv4_type: static
            ipv4: 44.44.44.254
            ipv4_gateway: internet_gw
            cidr: 24
            enable: true
        gateways:
          internet_gw:
            iface: internet
            gateway: 44.44.44.44
            is_default: true
          wan_gw:
            iface: wan
            gateway: 88.31.10.1
          wan_next_gw:
            iface: wan
            gateway: 88.31.10.254
          sat_gw:
            iface: remote
            gateway: 10.0.1.253
          remote_gw:
            iface: remote
            gateway: 10.0.1.254
        routes:
          sat_route:
            network: 172.128.1.0/24
            gateway: sat_gw
            iface: remote
      Apollo:
        address: "10.0.0.231"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.231
            cidr: 24
            enable: true
          lan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 172.128.1.1
            cidr: 24
            enable: true
          wan:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.1.253
            ipv4_gateway: remote_next_gw
            cidr: 24
            enable: true
        gateways:
          remote_next_gw:
            iface: wan
            gateway: 10.0.1.254
            is_default: true
          remote_gw:
            iface: wan
            gateway: 10.0.1.253
        routes:
          local_route:
            network: 192.168.1.0/24
            gateway: remote_next_gw
          wan_route:
            network: 88.31.10.0/24
            gateway: remote_next_gw
      Uranus:
        address: "10.0.0.232"
        interfaces:
          control:
            iface: vtnet0
            ipv4_type: static
            ipv4: 10.0.0.232
            cidr: 24
            enable: true
          wan:
            iface: vtnet1
            ipv4_type: static
            ipv4: 88.31.10.254
            ipv4_gateway: wan_next_gw
            cidr: 24
            enable: true
          remote:
            iface: vtnet2
            ipv4_type: static
            ipv4: 10.0.2.254
            cidr: 24
            enable: true
          lan:
            iface: vtnet3
            ipv4_type: static
            ipv4: 192.168.2.1
            cidr: 24
            enable: true
          internet:
            iface: vtnet4
            ipv4_type: static
            ipv4: 44.44.44.253
            ipv4_gateway: internet_gw
            cidr: 24
            enable: true
        gateways:
          internet_gw:
            iface: internet
            gateway: 44.44.44.44
            is_default: true
          wan_gw:
            iface: wan
            gateway: 88.31.10.254
            # is_default: true
          wan_next_gw:
            iface: wan
            gateway: 88.31.10.1
          sat_gw:
            iface: remote
            gateway: 10.0.2.253
          remote_gw:
            iface: remote
            gateway: 10.0.2.254
        routes:
          sat_route:
            network: 172.128.2.0/24
            gateway: sat_gw
            iface: remote
      Artemis:
          address: "10.0.0.233"
          interfaces:
            control:
              iface: vtnet0
              ipv4_type: static
              ipv4: 10.0.0.233
              cidr: 24
              enable: true
            lan:
              iface: vtnet1
              ipv4_type: static
              ipv4: 172.128.2.1
              cidr: 24
              enable: true
            wan:
              iface: vtnet2
              ipv4_type: static
              ipv4: 10.0.2.253
              ipv4_gateway: remote_next_gw
              cidr: 24
              enable: true
          gateways:
            remote_next_gw:
              iface: wan
              gateway: 10.0.2.254
              is_default: true
            remote_gw:
              iface: wan
              gateway: 10.0.2.253
          routes:
            local_route:
              network: 192.168.2.0/24
              gateway: remote_next_gw
            wan_route:
              network: 88.31.10.0/24
              gateway: remote_next_gw

  tasks:
    - name: Deploy Networks
      include_role:
        name: deploy_network_instance
      loop: "{{ networks | dict2items }}"
      loop_control:
        loop_var: network

    - name: Deploy Openstack Routers
      include_role:
        name: deploy_openstack_router
      loop: "{{ op_routers | dict2items }}"
      loop_control:
        loop_var: router

    - name: Deploy pfSense Routers
      include_role:
        name: deploy_pfsense_instance
      loop: "{{ pf_routers | dict2items }}"
      loop_control:
        loop_var: router


- name: Configure control instance
  hosts: deploy
  become: yes

  vars_files:
    - ./vars/secrets.yml

  tasks:
    - name: Install Ansible
      apt:
        update_cache: true
        name:
          - ansible
          - sshpass
          - python3-pip

    - name: Install openstack-cli
      cmd:
        command: "pip3 install python-openstackclient"
    
    - name: Copy over authorized ssh keys
      copy:
        src: ./ssh_authorized_keys
        dst: /home/ubuntu/.ssh/authorized_keys
        directory_mode: 0755
        remote_src: no

    - name: Transfer private key
      copy:
        src: ./files/ssh_keys/grey/id_rsa
        dst: /home/ubuntu/.ssh/id_rsa

    - name: Transfer public key
      copy:
        src: ./files/ssh_keys/grey/id_rsa.pub
        dst: /home/ubuntu/.ssh/id_rsa.pub
  
    - name: Copy over network playbook
      copy:
        src: ~/Documents/github/CDT/network_ansible/
        dst: /home/ubuntu/network_ansible/

- name: Configure from control node
  hosts: deploy
  vars:
    default_key_name: "{{ hostvars['localhost']['default_key_name'] }}"
    ansible_control_key_name: "{{ hostvars['localhost']['ansible_control_key_name'] }}"
    sshjump_net: "{{ hostvars['localhost']['sshjump_net'] }}"
    networks: "{{ hostvars['localhost']['networks'] }}"
    op_routers: "{{ hostvars['localhost']['op_routers'] }}"
    instances: "{{ hostvars['localhost']['instances'] }}"
  vars_files:
    - ./vars/secrets.yml

  tasks:
    - name: Run playbook on control instance
      shell:
        cmd: "cd /home/ubuntu/network_ansible && echo \"{{ kjc8084_op_password }}\" | source kjc8084_bravo_infra-openrc.sh && ansible-playbook build_network.yml"
